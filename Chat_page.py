# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Chat-page.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import threading
import sys 
import os 

def parse_data(raw_data: bytes):
    data = raw_data.decode()
    data.strip()
    parsed_data = data.split(" ")
    username = parsed_data[0]
    flag = parsed_data[1]
    message = ""
    if flag == 's':
        message = parsed_data[2]
    elif flag == 'm':
        message = " ".join(parsed_data[2:])
    else:
        print('error in parse data')
    
    return username, flag, message



class Chat_Dialog(object):
    def setupUi(self, Dialog, client, username):
        self.client = client
        self.username = username
        Dialog.setObjectName("Dialog")
        Dialog.resize(782, 439)
        Dialog.setFixedSize(782, 439)
        self.scrollArea = QtWidgets.QScrollArea(Dialog)
        self.scrollArea.setGeometry(QtCore.QRect(10, 40, 561, 321))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 559, 319))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.listView = QtWidgets.QListView(self.scrollAreaWidgetContents)
        self.listView.setGeometry(QtCore.QRect(0, 0, 559, 319))
        self.listView.setObjectName("listView")
        # self.verticalScrollBar = QtWidgets.QScrollBar(self.scrollAreaWidgetContents)
        # self.verticalScrollBar.setGeometry(QtCore.QRect(540, -1, 20, 321))
        # self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        # self.verticalScrollBar.setObjectName("verticalScrollBar")
        # self.horizontalScrollBar = QtWidgets.QScrollBar(self.scrollAreaWidgetContents)
        # self.horizontalScrollBar.setGeometry(QtCore.QRect(0, 300, 531, 20))
        # self.horizontalScrollBar.setOrientation(QtCore.Qt.Horizontal)
        # self.horizontalScrollBar.setObjectName("horizontalScrollBar")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.scrollArea_2 = QtWidgets.QScrollArea(Dialog)
        self.scrollArea_2.setGeometry(QtCore.QRect(580, 40, 181, 321))
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 179, 319))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        # self.verticalScrollBar_2 = QtWidgets.QScrollBar(self.scrollAreaWidgetContents_2)
        # self.verticalScrollBar_2.setGeometry(QtCore.QRect(160, 0, 20, 321))
        # self.verticalScrollBar_2.setOrientation(QtCore.Qt.Vertical)
        # self.verticalScrollBar_2.setObjectName("verticalScrollBar_2")
        self.listView_2 = QtWidgets.QListView(self.scrollAreaWidgetContents_2)
        self.listView_2.setGeometry(QtCore.QRect(0, 0, 179, 319))
        self.listView_2.setObjectName("listView_2") 
        self.listView_2.raise_()
        # self.verticalScrollBar_2.raise_()
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setGeometry(QtCore.QRect(10, 380, 561, 41))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(580, 380, 81, 41))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(680, 380, 81, 41))
        self.pushButton_2.setObjectName("pushButton_2")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(10, 0, 91, 41))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(584, 10, 171, 31))
        self.label_2.setObjectName("label_2")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.recv_thread = threading.Thread(target=self.recv, name='receive thread')
        self.recv_thread.start()
        self.model1 = QtGui.QStandardItemModel()
        self.model2 = QtGui.QStandardItemModel()
        self.listView.setModel(self.model1)
        self.listView_2.setModel(self.model2)
        self.pushButton.clicked.connect(self.send)
        self.pushButton_2.clicked.connect(os._exit)

   
    
    def send(self):
        message = self.lineEdit.text()
        message.strip()
        if message:
            message_header = f"{len(message.encode()):<2048}".encode()
            bytes_sent = 0
            self.lineEdit.setEnabled(False)
            while bytes_sent < len(message_header + message.encode()):
                bytes_sent += self.client.send(
                    (message_header + message.encode())[bytes_sent:]
                )
            self.lineEdit.setEnabled(True)
            self.lineEdit.clear()

    def recv(self):
       

        while True:
            try:
                total_data = b""
                data_header = self.client.recv(2048)
                if data_header:
                    data_len = int(data_header.decode())
                    while True:
                        if len(total_data) < data_len:
                            data = self.client.recv(data_len)
                            total_data += data 
                        else:
                            break  
                    username, flag, message = parse_data(total_data)

                    if flag=='s':
                        if message == "1":
                            new_user = QtGui.QStandardItem(f"{username}")
                            self.model2.appendRow(new_user)
                        
                        elif message == "0":
                            offline_user_item  = self.model2.findItems(username)[0]
                            offline_user_index = self.model2.indexFromItem(offline_user_item)
                            self.model2.removeRow(offline_user_index.row())
                            left_user = QtGui.QStandardItem(f"{username} left the chat room.")
                            self.model1.appendRow(left_user)

                    elif flag=='m':
                        new_item = QtGui.QStandardItem(f"{username}: {message}")
                        self.model1.appendRow(new_item)


                else:
                    self.client.close()
                    new_item = QtGui.QStandardItem("connection closed!")
                    self.model1.appendRow(new_item)
                    return 
                    
            except ConnectionAbortedError as ex:
                new_item = QtGui.QStandardItem("connection closed!")
                self.model1.appendRow(new_item)
                return 
            
            except ConnectionResetError as ex:
                new_item = QtGui.QStandardItem("connection closed!")
                self.model1.appendRow(new_item)
                return 

            except Exception as e:
                # print(e, file=sys.stderr)
                return 





    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton.setText(_translate("Dialog", "Send"))
        self.pushButton_2.setText(_translate("Dialog", "Exit"))
        self.label.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:18pt;\">Chat</span></p></body></html>"))
        self.label_2.setText(_translate("Dialog", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt;\">Online Users</span></p></body></html>"))


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     Dialog = QtWidgets.QDialog()
#     ui = Ui_Dialog()
#     ui.setupUi(Dialog)
#     Dialog.show()
#     sys.exit(app.exec_())
